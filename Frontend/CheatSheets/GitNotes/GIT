Часто используемые и полезные команды в GIT и Terminal

--------- Команды терминала ---------

mkdir <folder name> - создаст папку
touch <file name> - создаст файл
ls - отобразит все файлы и папки в данной директории
cd <folder name> - перейти в указанную директорию
cd .. - выйти из директории на уровень выше
cd - выйти на самый верх
mv <origin file name> <new file name> - переименование файла
rm <file name> - удалить файл
mv <file name> <path/file name> - перемещение файла
rm - r <directory> - удаление директории
start . — открыть папку, в которой сейчас находимся.
code . — открыть папку в редакторе кода.
pwd — узнать полный путь к папке, в которой сейчас находимся.


--------- Команды гита -----------

git init - создаст репозиторий
git add <file name> проиндексирует файл перед отправкой в коммит
git add . - добавит все файлы и папки
git add -A - тоже самое
git commit -m'message' - закоммитит
git status - проверить текущее состояние репозитория
git branch -m master main - переименовать ветку master в main
git log <file name> - просматривать историю изменений конкретного файла
git log - Получение списка произведенных изменений

git checkout <hash> - путешествуем по коммитам через хэш
git switch <branch> - вернуть к последней версии
git tag - просмотр существующих тэгов на коммитах
git tag <tag name> - создание тэга на текущем коммите
git checkout <tag name> - переключение на версию данного тэга
git checkout <tag name^> - переключение на версию предшествующего коммита
git checkout <file name> - отмена изменений в рабочем каталоге
git reset HEAD <file name> - сбрасываем область подготовки
git checkout <file name> - отменяем измениния в файле до последнего коммита
git revert HEAD - отмена коммита
git revert <hash> - отмена коммита по хэшу
git reset --hard <tag name or commit hash> - сброс ветки до этой точки
git tag -d <tag name> - удаление тега
git commit --amend -m'new message' - замена последнего коммита

git switch -c <branch name> - создание новой ветки
git switch <branch name> - переключения между ветками
git log --all --graph просмотр отличающихся веток
git merge <branch name> - указываем название ветки из которой подтягием изменения
git rebase <branch name> - указываем название ветки из которой подтягием изменения

git rm -r <directory> - удаление директории
git checkout <branch_name> -- <paths> - крадем файл из другой ветки
git rm --сached <file name> - Убрать файл из последнего коммита, но не удалять этот файл.


--------- GitHub -----------

git clone <link> <folder name> - скачать репу и создать папку
git pull - обновить локальный репозиторий относительно удаленного перед пушем
git push - пушим